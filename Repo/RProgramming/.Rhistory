library(datasets)
data("iris")
?iris
data <- data(iris)
subset(data, "virginica")
subset(data, species = "virginica")
data$Species
library(datasets)
datasets(iris)
data(iris)
return(iris)
iris$Species = "virginica"
mean(iris$Species = "virginica")
mean(iris$Sepal.Length)
virginicas <- iris$Species = 'virginica'
virginicas <- iris$Species['virginica']
mean(virginicas)
virginica <- iris$Species=='virginica'
mean(iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
source('C:/repo/Repo/RProgramming/cachematrix.R')
makeCacheMatrix()
cacheSolve(x, 1, 2)
cacheSolve(1, 2)
cacheSolve(1)
source('C:/repo/Repo/RProgramming/cachematrix.R')
source('C:/repo/Repo/RProgramming/cachematrix.R')
submit()
source('C:/repo/Repo/RProgramming/rprog-scripts-submitscript3.R')
submit()
source('C:/repo/Repo/RProgramming/best.R')
best("SC", "heart attack")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('C:/repo/Repo/RProgramming/best.R')
fread(C:/Users/Matt/Downloads/getdata-data-ss06pid.csv)
fread("C:/Users/Matt/Downloads/getdata-data-ss06pid.csv")
fread()
clr
library(httr)
oauth_endpoints("github")
sqldf()
import sqldf
install.packages("sqldf")
sqldf()
help(read.csv)
getwd()
acs = read.csv("getdata-data-ss06pid.csv")
sqldf("select * from acs where AGEP < 50")
library(sqldf)
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
page = url("http://biostat.jhsph.edu/~jleek/contact.html ")
html = readLines(page)
close(page)
html
library(httr); html2 = GET("http://biostat.jhsph.edu/~jleek/contact.html ")
import(httr)
get("http://biostat.jhsph.edu/~jleek/contact.html ")
install.packages("httr")
library(httr)
GET("http://biostat.jhsph.edu/~jleek/contact.html ")
html2 = GET("http://biostat.jhsph.edu/~jleek/contact.html ")
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
import htmlparse
install.packages("htmlParse")
file = read.fortran("getdata-wksst8110.for")
file = read.fortran("getdata-wksst8110.for", as-is = TRUE)
ff <- temptile()
ff <- tempfile()
cat(file = ff, "123456","987654", sep = "\n")
dd <- read.fortran(file)
